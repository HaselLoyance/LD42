<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-109</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprPixel</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrGetCell();
extraJumpTime = 0;killedBy = "";
innerCell.enemy = self;
powerups[0] = false;
powerups[1] = false;
powerups[2] = false;
powerups[3] = false;
faceDir = choose(0,1,2,3);
dir = scrFaceDirToDegrees(faceDir);
direction = dir;
image_angle = 0;
asjkghejikrhg =false;
jumpStrength = 1;
maxJumpStrength = 3;
changeDir = false;
inputLock = false;
changeFaceDirMp = 0;
changeStrengthMp = 0;
changeStrength = false;
strengthAnimOffset =0;
a = 0;
pickedCell = 0;
crossHairAlpha=1.0;
scaleModifier = 0.0;
doJump =false;
jumpSpeed = 0;
drawSubSprite = 0;
dead=false;
fadeAnimAlpha = 1;
rotDead = 0;
hookCell=0;
inAction = false;
platformList = scrGetCrossCells(maxJumpStrength);
platformValuesList = ds_list_create();
optionsList = scrGetCrossCells(maxJumpStrength);
optionsValuesList = ds_list_create();
tickDelay = false;
midAction = false;

forceTargetShrink = false;
// 0 - passive, stays on platforms as long as possible, rarely attacks
// 1 - agressive, jumps into action, 
// 2 - kinda mix of both
botStrat = choose(0,1);
event_user(0);

name = objGameController.names[| irandom(ds_list_size(objGameController.names)-1)]

//event_user(14);










</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///jump strength updater
jumpStrength--;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///jump strength updater
jumpStrength++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (objGameController.gameEnd)
{
exit;
}
if (extraJumpTime &gt; 1)
{
extraJumpTime--;
}
else if (extraJumpTime == 1) {
maxJumpStrength = 3;
forceTargetShrink = true;
extraJumpTime = 0;
}


if(!inputLock &amp;&amp; !dead)
{
event_user(0);
}

if (!inputLock &amp;&amp; !dead &amp;&amp; powerups[2]) {
    event_user(10);
}
if (!inputLock &amp;&amp; forceTargetShrink &amp;&amp; jumpStrength &gt; maxJumpStrength)
{
    inputLock = true;
    changeStrengthMp = -1;
    changeStrength = true;
    alarm[1] = 7;
}

if (( !dead &amp;&amp; (!inAction || midAction) &amp;&amp; botStrat == 1) ||
    ( !dead &amp;&amp; (!inAction || midAction) &amp;&amp; (innerCell.platform == 0 || !innerCell.validForLanding) &amp;&amp; botStrat == 0)) {
    
    midAction = false;
    
    event_user(13);
   
   if (!inAction)
   {
        midAction = false;
        pickedCell = 0;
   }
} 

if (inputLock &amp;&amp; crossHairAlpha==1.0)
{
crossHairAlpha = 0.2;
drawSubSprite = 3;
}
else if (!inputLock &amp;&amp; crossHairAlpha = 0.2)
{
crossHairAlpha = 1;
}

if (changeDir)
{
    dir += changeFaceDirMp * 10;
    a++;
}

if (changeDir &amp;&amp; a == 9)
{
    changeDir = false;
    a = 0;
    changeFaceDirMp = 0;
    inputLock = false;
}

if (changeStrength)
{
    strengthAnimOffset += changeStrengthMp * 8;
    a++;
}

if (changeStrength &amp;&amp; a == 9)
{
    strengthAnimOffset = 0;
    changeStrength = false;
    a = 0;
    changeStrengthMp = 0;
    inputLock = false;
}

if (doJump)
{
    x+=jumpSpeed*dcos(dir);
    y+=jumpSpeed*-dsin(dir);
    scaleModifier = sin(pi*a/40);
    a++;
}

if (doJump &amp;&amp; a == 40)
{
    a = 0;
    doJump = false;
    inputLock = false;
    scaleModifier = 0;
    jumpSpeed=0;
    x = innerCell.x;
    y = innerCell.y;
    scrGetCell();
    
    if (innerCell.enemy != 0 &amp;&amp; innerCell.enemy != self)
    {
        with (innerCell.enemy) {
            killedBy = other.name;
            event_user(12);
        }
    }
    
    innerCell.enemy = self;

    
    if(innerCell.platform == 0)
    {
        event_user(15);
    }
    
    if (innerCell.player != 0)
    {
        with (innerCell.player) {
            killedBy = other.name;
            event_user(2);
        }
    }
    
    if (innerCell != 0 &amp;&amp; innerCell.powerup != 0) {
        with (innerCell.powerup) {
            if (!despawn) {
                assignToEnemy = other;
                event_user(1);
            }
        }
    }
}

if (dead)
{
    fadeAnimAlpha -=0.05;
    
    if (asjkghejikrhg) {
    scaleModifier +=0.09;
    scaleModifier +=0.09;
    }
    else {
    scaleModifier -=0.09;
    scaleModifier -=0.09;
    }
}

if (dead &amp;&amp; fadeAnimAlpha  &lt;= 0.01)
{
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///death by fall
if (dead &amp;&amp; !objGameController.gameEnd)
    exit;
    objGameController.enemyCount--;
objGameController.logMessage = name + " fell into the void";
dead = true;
inputLock = true;
a = 1000;
doJump =false;
changeDir = false;
changeStrength = false;
crossHairAlpha = 0;
changeFaceDirMp = 0;


gravity = 0.5;
innerCell.enemy = 0;

depth = -innerCell.j

dir += random_range(-20,20);
rotDead = dir;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///death by player jump
if (dead &amp;&amp; !objGameController.gameEnd)
    exit;
objGameController.enemyCount--;
objGameController.logMessage = name + " was crushed by the " + objGameController.prefix + " Player";

dead = true;
inputLock = true;
a = 1000;
doJump =false;
changeDir = false;
changeStrength = false;
crossHairAlpha = 0;
inAction = false;
midAction = false;
changeFaceDirMp = 0;
asjkghejikrhg = true;
innerCell.enemy = 0;

depth = -innerCell.j -3;

rotDead = dir;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// perform actions based on values of each paltform and shit
if (objGameController.gameEnd)
exit;
var ugh;

if (!inAction)
{
scrPickCell();
}

if inAction
{    
    if (pickedCell != 0 &amp;&amp; pickedCell.i == innerCell.i &amp;&amp; pickedCell.j == innerCell.j)
    {
        inAction = false;
        exit;
    } 
    else if (pickedCell == 0 || (hookCell != 0 &amp;&amp;point_distance(pickedCell.i, pickedCell.j, hookCell.i, hookCell.j)) &gt; 3 || optionsList == 0)
    {
        if (powerups[1]){
            inAction = false;
            event_user(9) // use powerup1
            exit;
        } else if (powerups[0]) {
            inAction = false;
            event_user(8) // use powerup0
            exit;
        }  
        
    }
    
    
        if (pickedCell == 0)
        {
            inAction = false;
            exit;
        }
    
        if (hookCell.i == pickedCell.i &amp;&amp; hookCell.j == pickedCell.j) {
            inAction = false;
            event_user(1) // jump
            exit;
        }
        else if (faceDir ==0)
        {
            if (pickedCell.i &gt; innerCell.i) {
                if (hookCell.i &gt; pickedCell.i) event_user(2) //move hook left
                else event_user(4) //move hook right
                midAction = true;
            }
            else if (pickedCell.i == innerCell.i) {
                if (pickedCell.j &gt; innerCell.j) event_user(5) //move hook down
                else event_user(3) //move hook up
                midAction = true;
            }
            else if (pickedCell.i &lt; innerCell.i)
            {
                if (jumpStrength == 1) {
                    event_user(2); //move hook left insta left
                } else {
                    event_user(5) //move hook down
                }
                midAction = true;
            }
        }
        else if (faceDir == 1) {
            if (pickedCell.j &lt; innerCell.j) {
                if (hookCell.j &gt; pickedCell.j) event_user(3)//ip
                else event_user(5) //down
                midAction = true;
            }
            else if (pickedCell.j == innerCell.j) {
                if (pickedCell.i &gt; innerCell.i) event_user(4) //right
                else event_user(2) //left
                midAction = true;
            }
            else if (pickedCell.j &gt; innerCell.j)
            {
                if (jumpStrength == 1) {
                    event_user(5); //insta down
                } else {
                    event_user(4) //right
                }
                midAction = true;
            }
        }
        else if (faceDir == 2)
        {
            if (pickedCell.i &lt; innerCell.i) {
                if (hookCell.i &gt; pickedCell.i) event_user(2) //hook left
                else event_user(4) //right
                midAction = true;
            }
            else if (pickedCell.i == innerCell.i) {
                if (pickedCell.j &gt; innerCell.j) event_user(5) //down
                else event_user(3) //up
                midAction = true;
            }
            else if (pickedCell.i &gt; innerCell.i)
            {
                if (jumpStrength == 1) {
                    event_user(4); //insta right
                } else {
                    event_user(3) //up
                }
                midAction = true;
            }
        }
        else if (faceDir == 3)
        {
            if (pickedCell.j &gt; innerCell.j) {
                if (hookCell.j &gt; pickedCell.j) event_user(3)//up
                else event_user(5) //down
                midAction = true;
            }
            else if (pickedCell.j == innerCell.j) {
                if (pickedCell.i &gt; innerCell.i) event_user(4) //right
                else event_user(3) //left
                midAction = true;
            }
            else if (pickedCell.j &lt; innerCell.j)
            {
                if (jumpStrength == 1) {
                    event_user(3); //insta up
                } else {
                    event_user(2) //left
                }
                midAction = true;
            }
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///death by enemy jump
if (dead &amp;&amp; !objGameController.gameEnd)
    exit;
    
objGameController.enemyCount--;
objGameController.logMessage = name + " was crushed by " + killedBy;

dead = true;
inputLock = true;
a = 1000;
doJump =false;
changeDir = false;
changeStrength = false;
crossHairAlpha = 0;
inAction = false;
midAction = false;
changeFaceDirMp = 0;
asjkghejikrhg = true;
innerCell.enemy = 0;

depth = -innerCell.j -3;

rotDead = dir;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (powerups[2]&amp;&amp; !dead &amp;&amp; !inputLock &amp;&amp; !objGameController.gameEnd)
{
    extraJumpTime = 600;
    maxJumpStrength = 6;
    powerups[2] = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="19">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (powerups[1] &amp;&amp; !dead &amp;&amp; !inputLock &amp;&amp; !objGameController.gameEnd)
{
    if (hookCell.platform == 0) 
    {
        hookCell.platform = instance_create(hookCell.x,hookCell.y, objBluePlatform);
        powerups[1] = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (powerups[0] &amp;&amp; !dead &amp;&amp; !inputLock &amp;&amp; !objGameController.gameEnd)
{
    scrSpawnPhantomPlatform(innerCell.i,innerCell.j);
    powerups[0] = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// press down
if (inputLock || objGameController.gameEnd)
    exit;
    
if (faceDir == 3)
{
    if (jumpStrength &lt; maxJumpStrength)
    {
    inputLock = true;
    changeStrengthMp = 1;
    changeStrength = true;
    alarm[0]=7;
    }
}
else if (faceDir == 1 &amp;&amp; jumpStrength &gt; 1)
{
    inputLock = true;
    changeStrengthMp = -1;
    changeStrength = true;
    
    alarm[1]=7;
}
else
{
    inputLock = true;
    
    if (faceDir == 2)
        changeFaceDirMp = 1;
    else if (faceDir == 0)
        changeFaceDirMp = -1;
    else
        changeFaceDirMp = -2;
        
    faceDir = 3;
    
    changeDir = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// press right
if (inputLock || objGameController.gameEnd)
    exit;
    
if (faceDir == 0)
{
    if (jumpStrength &lt; maxJumpStrength)
    {
    inputLock = true;
    changeStrengthMp = 1;
    changeStrength = true;
    alarm[0]=7;
    }
}
else if (faceDir == 2 &amp;&amp; jumpStrength &gt; 1)
{
    inputLock = true;
    changeStrengthMp = -1;
    changeStrength = true;
    
    alarm[1]=7;
}
else
{
    inputLock = true;
    
    if (faceDir == 3)
        changeFaceDirMp = 1;
    else if (faceDir == 1)
        changeFaceDirMp = -1;
    else
        changeFaceDirMp = -2;
        
    faceDir = 0;
    
    changeDir = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// press up
if (inputLock || objGameController.gameEnd)
    exit;

if (faceDir == 1)
{
    if (jumpStrength &lt; maxJumpStrength)
    {
    inputLock = true;
    changeStrengthMp = 1;
    changeStrength = true;
    alarm[0]=7;
    }
}
else if (faceDir == 3 &amp;&amp; jumpStrength &gt; 1)
{
    inputLock = true;
    changeStrengthMp = -1;
    changeStrength = true;
    
    alarm[1]=7;
}
else
{
    inputLock = true;
    
    if (faceDir == 0)
        changeFaceDirMp = 1;
    else if (faceDir == 2)
        changeFaceDirMp = -1;
    else
        changeFaceDirMp = -2;
        
    faceDir = 1;
    
    changeDir = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///press left
if (inputLock || objGameController.gameEnd)
    exit;

if (faceDir == 2)
{
    if (jumpStrength &lt; maxJumpStrength)
    {
    inputLock = true;
    changeStrengthMp = 1;
    changeStrength = true;
    alarm[0]=7;
    }
}
else if (faceDir == 0 &amp;&amp; jumpStrength &gt; 1)
{
    inputLock = true;
    changeStrengthMp = -1;
    changeStrength = true;
    alarm[1]=7;
}
else
{
    inputLock = true;
    
    if (faceDir == 1)
        changeFaceDirMp = 1;
    else if (faceDir == 3)
        changeFaceDirMp = -1;
    else
        changeFaceDirMp = -2;
        
    faceDir = 2;
    
    changeDir = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///jump
if (inputLock || objGameController.gameEnd)
    exit;

event_user(0);

if (hookCell != noone)
{
if (hookCell.platform)
{
hookCell.platform.alarm[0] = -1;
}
innerCell.enemy = 0;
innerCell.validForLanding = false;
innerCell = hookCell;
inputLock = true;
doJump = true;
jumpSpeed = abs(point_distance(x,y,hookCell.x,hookCell.y) / 40);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(objGameController.gameEnd)
exit;
///gets hook's cell
var size = objGameController.size-1;
switch(faceDir)
{
case 0: 
    var checkI = min(innerCell.i + jumpStrength,size);
    hookCell = objGameController.gameGrid[# checkI, innerCell.j]; 
    break;
case 1: 
    var checkJ = max(innerCell.j - jumpStrength,0);
    hookCell = objGameController.gameGrid[# innerCell.i, checkJ]; 
    break;
case 2: 
    var checkI = max(innerCell.i - jumpStrength,0);
    hookCell = objGameController.gameGrid[# checkI, innerCell.j];
    break;
case 3: 
    var checkJ = min(innerCell.j + jumpStrength,size);
    hookCell = objGameController.gameGrid[# innerCell.i, checkJ];
    break;

}

if (hookCell != noone &amp;&amp; hookCell.validForLanding)
{
drawSubSprite =2;
}
else
{
if(hookCell == noone) {
hookCell = 0;
}
drawSubSprite = 3;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var j = 0;

if (changeStrengthMp == -1)
    j = 1;

if (!dead)
{

draw_sprite_ext(sprFlashlight,0,x,y,2 + 0.5*scaleModifier,2+ 0.5*scaleModifier,0,c_white, 0.15);
draw_sprite_ext(sprShadow,0,x,y,1 + 0.5*scaleModifier,1+ 0.5*scaleModifier,0,c_white, 0.8);
}
for(var i = j; i &lt; jumpStrength; i++)
{
    if j == 0 &amp;&amp; i == 0 &amp;&amp;strengthAnimOffset == 0
    {
    draw_sprite_ext(sprLandDirection, 2,x + 64*i*dcos(dir) + strengthAnimOffset*dcos(direction), y+64*i*-dsin(dir)+strengthAnimOffset*-dsin(dir), 1,1, dir,c_white, fadeAnimAlpha);
    }
    else
        draw_sprite_ext(sprLandDirection, 2,x + 64*i*dcos(dir) + strengthAnimOffset*dcos(direction), y+64*i*-dsin(dir)+strengthAnimOffset*-dsin(dir), 1,1, dir,c_white, crossHairAlpha);
}

if (powerups[1] &amp;&amp; hookCell != 0 &amp;&amp; !hookCell.validForLanding  &amp;&amp; !dead)
{
draw_sprite_ext(sprBlueBottom,0,x + 64*jumpStrength*dcos(dir)+strengthAnimOffset*dcos(dir), y+64*jumpStrength*-dsin(dir)+strengthAnimOffset*-dsin(dir),1,1,0,c_white, 0.4);
draw_sprite_ext(sprBluePlatform,0,x + 64*jumpStrength*dcos(dir)+strengthAnimOffset*dcos(dir), y+64*jumpStrength*-dsin(dir)+strengthAnimOffset*-dsin(dir),1,1,0,c_white, 0.4);
}

draw_sprite_ext(sprLandTarget,drawSubSprite,x + 64*jumpStrength*dcos(dir)+strengthAnimOffset*dcos(direction), y+64*jumpStrength*-dsin(dir)+strengthAnimOffset*-dsin(dir),1,1,dir,c_white, crossHairAlpha);

if (dead)
{

draw_sprite_ext(sprPlayer, 2,x,y,1 + 0.5*scaleModifier,1+ 0.5*scaleModifier,rotDead,c_white, fadeAnimAlpha);
}
else
{

draw_sprite_ext(sprPlayer, 2,x,y,1 + 0.5*scaleModifier,1+ 0.5*scaleModifier,dir,c_white, 1.0);
}


    draw_set_font(ftName);
    draw_set_halign(fa_center);
    draw_set_color(make_colour_rgb(21,73,184));
    
    if (!dead)
    draw_text(x,y+ 50, name);
/*
var lSize = ds_list_size(platformList);

if (lSize &gt; 0)
{
for (var i = 0; i &lt; lSize; i++)
{
var cell = platformList[| i];
    draw_set_font(font0);
    draw_set_halign(fa_center);
    draw_set_color(c_green);
    draw_text(cell.x,cell.y, platformValuesList[| i]);

}
}
*/

/*
lSize = ds_list_size(optionsList);
if (lSize &gt; 0)
{
for (var i = 0; i &lt; lSize; i++)
{
var cell = optionsList[| i];
    draw_set_font(font1);
    draw_set_halign(fa_center);
    draw_set_color(c_green);
    draw_text(cell.x,cell.y, optionsValuesList[| i]);

}
}

draw_set_font(font1);
draw_set_halign(fa_center);
draw_set_color(c_white);
draw_text(x,y, string(botStrat) + string(inputLock) + string(dead) + string(inAction) + string(midAction));

if (pickedCell != 0)
{
    
    draw_set_font(font1);
    draw_set_halign(fa_center);
    draw_set_color(c_red);
    draw_text(pickedCell.x,pickedCell.y, "XX");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
