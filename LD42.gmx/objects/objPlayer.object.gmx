<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-110</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprPixel</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrGetCell();
innerCell.player = self;
killedBy="";
direction = 0;
dir = 0;
image_angle = 0;
faceDir = 0;
jumpStrength = 1;
forceTargetShrink = false;
maxJumpStrength = 3;
changeDir = false;
inputLock = false;
changeFaceDirMp = 0;
changeStrengthMp = 0;
changeStrength = false;
strengthAnimOffset =0;
a = 0;
crossHairAlpha=1.0;
scaleModifier = 0.0;
doJump =false;
jumpSpeed = 0;
drawSubSprite = 0;
dead=false;fadeAnimAlpha = 1;
asjkghejikrhg=false;
rotDead = 0;
hookCell=0;

event_user(0);
//event_user(2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///jump strength updater
jumpStrength--;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///jump strength updater
jumpStrength++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (objGameController.gameEnd)
{
exit;
}

if (objGameController.extraJumpTime &gt; 1)
{
objGameController.extraJumpTime--;
}
else if (objGameController.extraJumpTime == 1) {
maxJumpStrength = 3;
forceTargetShrink = true;
objGameController.extraJumpTime = 0;
}

if (!inputLock)
{
event_user(0);
}

if (!inputLock &amp;&amp; forceTargetShrink &amp;&amp; jumpStrength &gt; maxJumpStrength)
{
    inputLock = true;
    changeStrengthMp = -1;
    changeStrength = true;
    alarm[1] = 7;
}

if (forceTargetShrink &amp;&amp;jumpStrength &lt;= maxJumpStrength)
{
forceTargetShrink = false;
}

if (inputLock &amp;&amp; crossHairAlpha==1.0)
{
crossHairAlpha = 0.2;
drawSubSprite = 1;
}
else if (!inputLock &amp;&amp; crossHairAlpha = 0.2)
{
crossHairAlpha = 1;
}

if (changeDir)
{
    dir += changeFaceDirMp * 10;
    a++;
}

if (changeDir &amp;&amp; a == 9)
{
    changeDir = false;
    a = 0;
    changeFaceDirMp = 0;
    inputLock = false;
}

if (changeStrength)
{
    strengthAnimOffset += changeStrengthMp * 8;
    a++;
}

if (changeStrength &amp;&amp; a == 8)
{
    strengthAnimOffset = 0;
    changeStrength = false;
    a = 0;
    changeStrengthMp = 0;
    inputLock = false;
}

if (doJump)
{
    x+=jumpSpeed*dcos(dir);
    y+=jumpSpeed*-dsin(dir);
    scaleModifier = sin(pi*a/40);
    a++;
}

if (doJump &amp;&amp; a == 40)
{
    a = 0;
    doJump = false;
    inputLock = false;
    scaleModifier = 0;
    jumpSpeed=0;
    x = innerCell.x;
    y = innerCell.y;
    scrGetCell();
    innerCell.player = self;
    
    if(innerCell.platform == 0)
    {
        event_user(1);
    }
    if (innerCell.enemy != 0)
    {
        with (innerCell.enemy) {
            event_user(14);
        }
    }
    
     if (innerCell != 0 &amp;&amp; innerCell.powerup != 0) {
        with (innerCell.powerup) {
            if (!despawn) {
                byPlayer = true;
                event_user(1);
            }
        }
    }
}

if (dead)
{
 fadeAnimAlpha -=0.05;
    
    if (asjkghejikrhg) {
    scaleModifier +=0.09;
    scaleModifier +=0.09;
    }
    else {
    scaleModifier -=0.09;
    scaleModifier -=0.09;
    }
}

if (dead &amp;&amp; fadeAnimAlpha &lt;= 0.01)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///death by enemy jump
if (dead)
    exit;
    
audio_play_sound(sndDeath,0,false);
objGameController.logMessage = objGameController.prefix + " Player was slained by " + killedBy;
dead = true;
inputLock = true;
a = 1000;
doJump =false;
changeDir = false;
changeStrength = false;
crossHairAlpha = 0;
changeFaceDirMp = 0;
asjkghejikrhg = true;
innerCell.player = 0;

depth = -innerCell.j -3;

rotDead = dir;
rotDead = dir;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///death by fall
if (dead)
    exit;
    
audio_play_sound(sndDeath,0,false);
objGameController.logMessage = objGameController.prefix + " Player fell to their death";
dead = true;
inputLock = true;
a = 1000;
doJump =false;
changeDir = false;
changeStrength = false;
crossHairAlpha = 0;
changeFaceDirMp = 0;


gravity = 0.5;
innerCell.player = 0;

depth = -innerCell.j

dir += random_range(-20,20);
rotDead = dir;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///gets hook's cell

var checkX = x + 64*jumpStrength*dcos(dir);
var checkY = y+64*jumpStrength*-dsin(dir);
hookCell = instance_place(checkX, checkY, objCell);

if (hookCell != noone &amp;&amp; hookCell.validForLanding)
{
drawSubSprite =0;
}
else
{
if(hookCell == noone) {
hookCell = 0;
}
drawSubSprite = 1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var j = 0;

if (!dead)
{
draw_sprite_ext(sprFlashlight,0,x,y,2 + 0.5*scaleModifier,2+ 0.5*scaleModifier,0,c_white, 0.15);
draw_sprite_ext(sprShadow,0,x,y,1 + 0.5*scaleModifier,1+ 0.5*scaleModifier,0,c_white, 0.8);
}
if (changeStrengthMp == -1)
    j = 1;

for(var i = j; i &lt; jumpStrength; i++)
{
    if j == 0 &amp;&amp; i == 0 &amp;&amp;strengthAnimOffset == 0
    {
        draw_sprite_ext(sprLandDirection, drawSubSprite,x + 64*i*dcos(dir) + strengthAnimOffset*dcos(dir), y+64*i*-dsin(dir)+strengthAnimOffset*-dsin(dir), 1,1, dir,c_white,fadeAnimAlpha);
    }
    else
        draw_sprite_ext(sprLandDirection, drawSubSprite,x + 64*i*dcos(dir) + strengthAnimOffset*dcos(dir), y+64*i*-dsin(dir)+strengthAnimOffset*-dsin(dir), 1,1, dir,c_white, crossHairAlpha);
}

if (objGameController.powerups[1]&amp;&amp; !dead &amp;&amp; hookCell != 0 &amp;&amp; !hookCell.validForLanding )
{
draw_sprite_ext(sprBlueBottom,0,x + 64*jumpStrength*dcos(dir)+strengthAnimOffset*dcos(dir), y+64*jumpStrength*-dsin(dir)+strengthAnimOffset*-dsin(dir),1,1,0,c_white, 0.4);
draw_sprite_ext(sprBluePlatform,0,x + 64*jumpStrength*dcos(dir)+strengthAnimOffset*dcos(dir), y+64*jumpStrength*-dsin(dir)+strengthAnimOffset*-dsin(dir),1,1,0,c_white, 0.4);
}

draw_sprite_ext(sprLandTarget,drawSubSprite,x + 64*jumpStrength*dcos(dir)+strengthAnimOffset*dcos(dir), y+64*jumpStrength*-dsin(dir)+strengthAnimOffset*-dsin(dir),1,1,dir,c_white, crossHairAlpha);

if (dead)
{draw_sprite_ext(sprPlayer, drawSubSprite,x,y,1 + 0.5*scaleModifier,1+ 0.5*scaleModifier,rotDead,c_white, fadeAnimAlpha);
}
else
{
draw_sprite_ext(sprPlayer, drawSubSprite,x,y,1 + 0.5*scaleModifier,1+ 0.5*scaleModifier,dir,c_white, fadeAnimAlpha);
}


    draw_set_font(ftName);
    draw_set_halign(fa_center);
    if (drawSubSprite == 0)
    {
    draw_set_color(make_colour_rgb(50,137,39));
    }
    else
    {
    draw_set_color(make_colour_rgb(171,38,38));
    }
    
    if (!dead)
    draw_text(x,y+ 50, objGameController.prefix + " Player");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (objGameController.powerups[2]&amp;&amp; !dead &amp;&amp; !inputLock&amp;&amp; !objGameController.drawEndGUI)
{
audio_play_sound(sndPw3,0,false);
    objGameController.extraJumpTime = 600;
    forceTargetShrink = false;
    maxJumpStrength = 6;
    objGameController.powerups[2] = false;
}
else if (!objGameController.powerups[2]&amp;&amp; !dead &amp;&amp; !inputLock)
{
audio_play_sound(sndNoPW,0,false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (objGameController.powerups[1]&amp;&amp; !dead &amp;&amp; !inputLock&amp;&amp; !objGameController.drawEndGUI)
{
    if (hookCell.platform == 0) 
    {
audio_play_sound(sndPw2,0,false);
        hookCell.platform = instance_create(hookCell.x,hookCell.y, objBluePlatform);
        objGameController.powerups[1] = false;
    }
}
else if (!objGameController.powerups[1]&amp;&amp; !dead &amp;&amp; !inputLock)
{
audio_play_sound(sndNoPW,0,false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (objGameController.powerups[0]&amp;&amp; !dead &amp;&amp; !inputLock &amp;&amp; !objGameController.drawEndGUI)
{
    scrSpawnPhantomPlatform(innerCell.i,innerCell.j);
 
audio_play_sound(sndPw1,0,false);


    objGameController.powerups[0] = false;
}
else if (!objGameController.powerups[0]&amp;&amp; !dead &amp;&amp; !inputLock)
{
audio_play_sound(sndNoPW,0,false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (inputLock)
    exit;
    
audio_play_sound(sndChange,0,false);
if (faceDir == 3)
{
    if (jumpStrength &lt; maxJumpStrength)
    {
    inputLock = true;
    changeStrengthMp = 1;
    changeStrength = true;
    alarm[0] = 7;
    }
}
else if (faceDir == 1 &amp;&amp; jumpStrength &gt; 1)
{
    inputLock = true;
    changeStrengthMp = -1;
    changeStrength = true;
    
    alarm[1] = 7;
}
else
{
    inputLock = true;
    
    if (faceDir == 2)
        changeFaceDirMp = 1;
    else if (faceDir == 0)
        changeFaceDirMp = -1;
    else
        changeFaceDirMp = -2;
        
    faceDir = 3;
    
    changeDir = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (inputLock)
    exit;
    
audio_play_sound(sndChange,0,false);
if (faceDir == 0)
{
    if (jumpStrength &lt; maxJumpStrength)
    {
    inputLock = true;
    changeStrengthMp = 1;
    changeStrength = true;
    alarm[0] = 7;
    }
}
else if (faceDir == 2 &amp;&amp; jumpStrength &gt; 1)
{
    inputLock = true;
    changeStrengthMp = -1;
    changeStrength = true;
    
    alarm[1] = 7;
}
else
{
    inputLock = true;
    
    if (faceDir == 3)
        changeFaceDirMp = 1;
    else if (faceDir == 1)
        changeFaceDirMp = -1;
    else
        changeFaceDirMp = -2;
        
    faceDir = 0;
    
    changeDir = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (inputLock)
    exit;

audio_play_sound(sndChange,0,false);
if (faceDir == 1)
{
    if (jumpStrength &lt; maxJumpStrength)
    {
    inputLock = true;
    changeStrengthMp = 1;
    changeStrength = true;
    alarm[0] = 7;
    }
}
else if (faceDir == 3 &amp;&amp; jumpStrength &gt; 1)
{
    inputLock = true;
    changeStrengthMp = -1;
    changeStrength = true;
    
    alarm[1] = 7;
}
else
{
    inputLock = true;
    
    if (faceDir == 0)
        changeFaceDirMp = 1;
    else if (faceDir == 2)
        changeFaceDirMp = -1;
    else
        changeFaceDirMp = -2;
        
    faceDir = 1;
    
    changeDir = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (inputLock)
    exit;

audio_play_sound(sndChange,0,false);
if (faceDir == 2)
{
    if (jumpStrength &lt; maxJumpStrength)
    {
    inputLock = true;
    changeStrengthMp = 1;
    changeStrength = true;
    alarm[0] = 7;
    }
}
else if (faceDir == 0 &amp;&amp; jumpStrength &gt; 1)
{
    inputLock = true;
    changeStrengthMp = -1;
    changeStrength = true;
    alarm[1] = 7;
}
else
{
    inputLock = true;
    
    if (faceDir == 1)
        changeFaceDirMp = 1;
    else if (faceDir == 3)
        changeFaceDirMp = -1;
    else
        changeFaceDirMp = -2;
        
    faceDir = 2;
    
    changeDir = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (inputLock)
    exit;

event_user(0);

audio_play_sound(sndJump,0,false);
if (hookCell != noone)
{
if (hookCell.platform)
{
hookCell.platform.alarm[0] = -1;
}
innerCell.player = 0;
innerCell.validForLanding = false;
innerCell = hookCell;
inputLock = true;
doJump = true;
jumpSpeed = abs(point_distance(x,y,hookCell.x,hookCell.y) / 40);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
